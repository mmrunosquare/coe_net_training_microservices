# docker compose -f .\docker-compose.yaml --project-name microsvcs up --detach
version: '3.8'
volumes:
  postgres-data:
  pgadmin-data:

networks:
  micro_net:
    driver: bridge

services:
  pgAdmin4:
    networks: [micro_net]
    container_name: ms-pgadmin4
    image: dpage/pgadmin4:8.5
    ports:
      - 8080:80
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      - microservicesdb
    environment:
      PGADMIN_DEFAULT_EMAIL: jesus.acedo@unosquare.com
      PGADMIN_DEFAULT_PASSWORD: password
  microservicesdb:
    networks: [micro_net]
    container_name: ms-postgres
    image: postgres:16.2-alpine3.19
    restart: always
    environment:
      POSTGRES_PASSWORD: password.1
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data

  inventoryapi:
    build:
      context: ./backend
      dockerfile: InventoryAPI/Dockerfile
    networks:
      - micro_net
    ports:
      - "5001:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=ms-postgres;Database=inventory;Username=postgres;Password=password.1
    depends_on:
      - microservicesdb
    volumes:
      - ./backend/InventoryAPI/migrationscripts:/migrationscripts
    entrypoint: /bin/sh -c "dotnet InventoryAPI.dll && psql -h ms-postgres -U postgres -f /migrationscripts/initial.sql"

  clientsapi:
    build:
      context: ./backend
      dockerfile: ClientsAPI/Dockerfile
    networks:
      - micro_net
    ports:
      - "5002:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=ms-postgres;Database=clients;Username=postgres;Password=password.1
    depends_on:
      - microservicesdb
    volumes:
      - ./backend/ClientsAPI/migrationscripts:/migrationscripts
    entrypoint: /bin/sh -c "dotnet ClientAPI.dll && psql -h ms-postgres -U postgres -f /migrationscripts/initial.sql"

  rentingapi:
    build:
      context: ./backend
      dockerfile: RentingAPI/Dockerfile
    networks:
      - micro_net
    ports:
      - "5003:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=ms-postgres;Database=Rents;Username=postgres;Password=password.1
    depends_on:
      - microservicesdb
    volumes:
      - ./backend/RentingAPI/migrationscripts:/migrationscripts
    entrypoint: /bin/sh -c "dotnet RentingAPI.dll && psql -h ms-postgres -U postgres -f /migrationscripts/initial.sql"

  resourcesapi:
    build:
      context: ./backend
      dockerfile: ResourcesAPI/Dockerfile
    networks:
      - micro_net
    ports:
      - "5005:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=ms-postgres;Database=Resources;Username=postgres;Password=password.1
    depends_on:
      - microservicesdb
    volumes:
      - ./backend/ResourcesAPI/migrationscripts:/migrationscripts
    entrypoint: /bin/sh -c "dotnet ResourceAPI.dll && psql -h ms-postgres -U postgres -f /migrationscripts/initial.sql"